How did viewing a diff between two versions of a file help you see the bug that was introduced?

It pinpointed the lines that changed, requiring less searching.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It allows you to understand how the file evolved, and the motivations behind the changes.  It can be used as a template for how to perform certain code updates.  It can be useful in pinpointing when bugs were introduced.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

You only want to commit when you're in a stable place, so you must choose when to commit.  The danger is not committing often enough and ending up with too big of a commit.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Changes across different files are often related.

How can you use the commands git log and git diff to view the history of files?

git log gives a history of commit ids, and git diff allows you to compare across commit ids.

How might using version control make you more confident to make changes that could break something?

You can always go back to a working version.

Now that you have your workspace set up, what do you want to try using Git for?

Course Projects

